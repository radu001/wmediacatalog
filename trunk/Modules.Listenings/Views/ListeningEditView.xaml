<UserControl x:Class="Modules.Listenings.Views.ListeningEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:localConverters="clr-namespace:Modules.Listenings.Converters"
             xmlns:converters="clr-namespace:Common.Controls.Converters;assembly=Common.Controls"
             xmlns:controls="clr-namespace:Common.Controls.Controls;assembly=Common.Controls"
             xmlns:dialogs="clr-namespace:Common.Dialogs;assembly=Common.Dialogs"
             xmlns:commands="clr-namespace:Common.Commands;assembly=Common.Commands"
             xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
             mc:Ignorable="d" 
             x:Name="dialogWindow"
             Height="489" Width="508">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Common.Content;component/Styles/CommonStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <localConverters:HeaderTextConverter x:Key="HeaderTextConverter" EntityName="listening"/>
            <converters:InverseBoolConverter x:Key="InverseBoolConverter"/>
            <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <converters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
            <converters:RatingConverter x:Key="RatingConverter" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid x:Name="LayoutRoot">
        <TabControl TabStripPlacement="Right">
            <TabItem Header="General" Style="{StaticResource VeticalTabItemHeader}">
                <Grid x:Name="DialogContentLayout" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Date" Grid.Row="0" Grid.Column="0" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Text="{Binding Listening.Date}" Grid.Row="0" Grid.Column="1" IsReadOnly="True" 
                                     Margin="{StaticResource DialogMargin}"
                                     Visibility="{Binding IsViewMode,Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DatePicker Grid.Row="0" Grid.Column="1" Margin="{StaticResource DialogMargin}" Focusable="False"
                                        SelectedDate="{Binding Listening.Date,Mode=TwoWay}"
                                        Visibility="{Binding IsViewMode,Converter={StaticResource InverseBoolToVisibilityConverter}}"/>
                    <!--<extendedToolkit:DateTimePicker Grid.Row="0" Grid.Column="1" Margin="{StaticResource DialogMargin}" 
                                                    Value="{Binding Listening.Date,Mode=TwoWay}"
                                                    Visibility="{Binding IsViewMode,Converter={StaticResource InverseBoolToVisibilityConverter}}"/>-->

                    <TextBlock Text="Rating" Grid.Row="1" Grid.Column="0" Style="{StaticResource DialogLabelStyle}"/>
                    <toolkit:Rating Value="{Binding Listening.ListenRating,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged,Converter={StaticResource RatingConverter}}" 
                                                Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left"
                                                Margin="{StaticResource DialogMargin}" Cursor="Hand"
                                                IsReadOnly="{Binding IsViewMode}"
                                                ItemCount="7"/>

                    <TextBlock Text="Album" Grid.Row="2" Grid.Column="0" Style="{StaticResource DialogLabelStyle}"/>
                    <DockPanel Grid.Row="2" Grid.Column="1" LastChildFill="True">
                        <Button DockPanel.Dock="Right" Margin="{StaticResource DialogMargin}" Style="{StaticResource ImageButtonStyle}"
                                        Visibility="{Binding IsViewMode,Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                        commands:Clicked.Command="{Binding SearchAlbumCommand}">
                            <Button.Content>
                                <Image Source="/Common.Content;component/Images/ZoomHS.png" Width="16" Height="16"/>
                            </Button.Content>
                        </Button>
                        <TextBox x:Name="AlbumTextBox" Grid.Row="2" Grid.Column="1" Margin="{StaticResource DialogMargin}" IsReadOnly="True"/>
                    </DockPanel>

                    <TextBlock Text="Place" Grid.Row="3" Grid.Column="0" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Text="{Binding Listening.Place.Name}" Grid.Row="3" Grid.Column="1" IsReadOnly="True"
                                     Margin="{StaticResource DialogMargin}"
                                     Visibility="{Binding IsViewMode,Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DockPanel Grid.Row="3" Grid.Column="1" LastChildFill="True" 
                                       Visibility="{Binding IsViewMode,Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Button DockPanel.Dock="Right" Margin="{StaticResource DialogMargin}" Style="{StaticResource ImageButtonStyle}"
                                        commands:Clicked.Command="{Binding CreatePlaceCommand}">
                            <Button.Content>
                                <Image Source="/Common.Content;component/Images/add_15x15.png" Width="15" Height="15"/>
                            </Button.Content>
                        </Button>
                        <ComboBox Margin="{StaticResource DialogMargin}"
                                      ItemsSource="{Binding Places}" SelectedItem="{Binding Listening.Place,Mode=TwoWay,ValidatesOnExceptions=True}" DisplayMemberPath="Name"/>
                    </DockPanel>

                    <TextBlock Text="Mood" Grid.Row="4" Grid.Column="0" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Text="{Binding Listening.Mood.Name}" Grid.Row="4" Grid.Column="1" IsReadOnly="True"
                                     Margin="{StaticResource DialogMargin}"
                                     Visibility="{Binding IsViewMode,Converter={StaticResource BoolToVisibilityConverter}}"/>
                    <DockPanel Grid.Row="4" Grid.Column="1" LastChildFill="True"
                                       Visibility="{Binding IsViewMode,Converter={StaticResource InverseBoolToVisibilityConverter}}">
                        <Button DockPanel.Dock="Right" Margin="{StaticResource DialogMargin}" Style="{StaticResource ImageButtonStyle}"
                                        commands:Clicked.Command="{Binding CreateMoodCommand}">
                            <Button.Content>
                                <Image Source="/Common.Content;component/Images/add_15x15.png" Width="15" Height="15"/>
                            </Button.Content>
                        </Button>
                        <ComboBox Grid.Row="4" Grid.Column="1" Margin="{StaticResource DialogMargin}"
                                      ItemsSource="{Binding Moods}" SelectedItem="{Binding Listening.Mood,Mode=TwoWay,ValidatesOnExceptions=True}" DisplayMemberPath="Name"/>
                    </DockPanel>

                    <TextBlock Text="Private marks" Grid.Row="5" Grid.Column="0" VerticalAlignment="Top" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Grid.Row="5" Grid.Column="1" Margin="{StaticResource DialogMargin}" AcceptsReturn="True"
                                     Text="{Binding Listening.PrivateMarks,Mode=TwoWay}"
                                     IsReadOnly="{Binding IsViewMode}"/>
                </Grid>
            </TabItem>
            <TabItem Header="Review" Style="{StaticResource VeticalTabItemHeader}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Review" Grid.Column="0" VerticalAlignment="Top" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Grid.Column="1" Margin="{StaticResource DialogMargin}" AcceptsReturn="True"
                                     Text="{Binding Listening.Review,Mode=TwoWay}"
                                     IsReadOnly="{Binding IsViewMode}"/>
                </Grid>
            </TabItem>
            <TabItem Header="Comments" Style="{StaticResource VeticalTabItemHeader}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Comments" Grid.Column="0" VerticalAlignment="Top" Style="{StaticResource DialogLabelStyle}"/>
                    <TextBox Grid.Column="1" Margin="{StaticResource DialogMargin}" AcceptsReturn="True"
                                     Text="{Binding Listening.Comments,Mode=TwoWay}"
                                     IsReadOnly="{Binding IsViewMode}"/>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
